{
  "training_config": "tests/tests_data/models/result_invariability.train.train.config",
  "trained_model": "tests/tests_data/models/result_invariability.train.model.best.npz",
  "src_fn": "tests/tests_data/src2.txt",
  "dest_fn": "tests/tests_data/models/result_invariability.translations_using_beam_search.txt",
  "method": {
    "mode": "beam_search",
    "beam_width": 30,
    "beam_pruning_margin": null,
    "nb_steps": 50,
    "nb_steps_ratio": null,
    "groundhog": false,
    "force_finish": false,
    "beam_score_length_normalization": "none",
    "beam_score_length_normalization_strength": 0.2,
    "post_score_length_normalization": "simple",
    "post_score_length_normalization_strength": 0.2,
    "post_score_coverage_penalty": "none",
    "post_score_coverage_penalty_strength": 0.2,
    "prob_space_combination": false
  },
  "beam_score_coverage_penalty": "none",
  "beam_score_coverage_penalty_strength": 0.2,
  "output": {
    "tgt_fn": null,
    "nbest_to_rescore": null,
    "ref": null,
    "tgt_unk_id": "align",
    "generate_attention_html": null,
    "rich_output_filename": null,
    "dic": null,
    "remove_unk": false,
    "normalize_unicode_unk": false,
    "attempt_to_relocate_unk_source": false
  },
  "process": {
    "gpu": null,
    "max_nb_ex": null,
    "mb_size": 80,
    "nb_batch_to_sort": 20,
    "load_model_config": null,
    "src_fn": "tests/tests_data/src2.txt",
    "dest_fn": "tests/tests_data/models/result_invariability.translations_using_beam_search.txt",
    "additional_training_config": null,
    "additional_trained_model": null,
    "reverse_training_config": null,
    "reverse_trained_model": null,
    "server": null,
    "segmenter_command": null,
    "segmenter_format": "plain",
    "description": null
  },
  "metadata": {
    "config_version_num": 1,
    "command_line": "/mnt/berry/home/frederic/knmt-fbergeron-master-2/nmt_chainer/__main__.py eval tests/tests_data/models/result_invariability.train.train.config tests/tests_data/models/result_invariability.train.model.best.npz tests/tests_data/src2.txt tests/tests_data/models/result_invariability.translations_using_beam_search.txt --mode beam_search --beam_width 30",
    "knmt_version": {
      "package_version": "0.9.15",
      "git": "e703efb66ed72c283b00032f1f652b46c57293c3",
      "dirty_status": "dirty",
      "diff": "diff --git a/bin/make-result-invariability-model b/bin/make-result-invariability-model\nindex f04c8ac..3389d2f 100755\n--- a/bin/make-result-invariability-model\n+++ b/bin/make-result-invariability-model\n@@ -28,14 +28,16 @@ rm -rf tests/tests_data/models/result_invariability_untrained.train.model.best_l\n rm -rf tests/tests_data/models/result_invariability_untrained.train.result.sqlite\n \n \n-# Create translations with the models using beam search and greedy search.\n+# Create translations with the models using beam search.\n knmt eval tests/tests_data/models/result_invariability.train.train.config tests/tests_data/models/result_invariability.train.model.best.npz tests/tests_data/src2.txt tests/tests_data/models/result_invariability.translations_using_beam_search.txt --mode beam_search --beam_width 30\n \n-knmt eval tests/tests_data/models/result_invariability.train.train.config tests/tests_data/models/result_invariability.train.model.best.npz tests/tests_data/src2.txt tests/tests_data/models/result_invariability.translations_using_greedy_search.txt --mode translate\n-\n knmt eval tests/tests_data/models/result_invariability_untrained.train.train.config tests/tests_data/models/result_invariability_untrained.train.model.best.npz tests/tests_data/src2.txt tests/tests_data/models/result_invariability_untrained.translations_using_beam_search.txt --mode beam_search --beam_width 30\n \n-knmt eval tests/tests_data/models/result_invariability_untrained.train.train.config tests/tests_data/models/result_invariability_untrained.train.model.best.npz tests/tests_data/src2.txt tests/tests_data/models/result_invariability_untrained.translations_using_greedy_search.txt --mode translate\n+knmt eval tests/tests_data/models/result_invariability.train.train.config tests/tests_data/models/result_invariability.train.model.best.npz tests/tests_data/src2.txt tests/tests_data/models/result_invariability.translations_using_beam_search.txt --mode beam_search --beam_width 30 --groundhog=True\n+\n+knmt eval tests/tests_data/models/result_invariability_untrained.train.train.config tests/tests_data/models/result_invariability_untrained.train.model.best.npz tests/tests_data/src2.txt tests/tests_data/models/result_invariability_untrained.translations_using_beam_search.txt --mode beam_search --beam_width 30 --groundhog=True\n+\n+\n \n \n # Create translations with the models using greedy search.\ndiff --git a/tests/result_invariability_test.py b/tests/result_invariability_test.py\nindex 49687a2..f43f8a1 100644\n--- a/tests/result_invariability_test.py\n+++ b/tests/result_invariability_test.py\n@@ -59,3 +59,48 @@ class TestResultInvariability:\n             print p\n \n         assert(actual_translations == expected_translations)\n+    \n+    @pytest.mark.parametrize(\"model_name, [\n+        (\"result_invariability\"),\n+        (\"result_invariability_untrained\")\n+    ])\n+    def test_result_invariability_using_groundhog(self, tmpdir, gpu, model_name, search_type):\n+        \"\"\"\n+        Performs some translations with a preexisting models and compare the results\n+        using beam_search with groundhog option enabled with previous results of the same experiment.\n+        The results should be identical.\n+        If not, it means that a recent commit have changed the behavior of the system.\n+        \"\"\"\n+\n+        test_data_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), \"tests_data\")\n+        data_src_file = os.path.join(test_data_dir, \"src2.txt\")\n+        data_tgt_file = os.path.join(test_data_dir, \"tgt2.txt\")\n+        train_dir = os.path.join(test_data_dir, \"models\")\n+        train_prefix = os.path.join(train_dir, \"{0}.train\".format(model_name))\n+        search_eval_dir = tmpdir.mkdir(\"eval_{0}\".format(search_type))\n+        search_file = os.path.join(\n+            str(search_eval_dir),\n+            'translations_using_{0}.txt'.format(search_type))\n+        search_mode = 'beam_search'\n+        other_params = ' --beam_width 30 --groundhog=True'\n+        if search_type == 'greedy_search':\n+            search_mode = 'translate'\n+            other_params = ''\n+        args_eval_search = [train_prefix + '.train.config', train_prefix + '.model.best.npz', data_src_file, search_file] + \\\n+            '--mode {0}{1}'.format(search_mode, other_params).split(' ')\n+        if gpu is not None:\n+            args_eval_search += ['--gpu', gpu]\n+        main(arguments=[\"eval\"] + args_eval_search)\n+\n+        with open(os.path.join(str(test_data_dir), \"models/{0}.translations_using_{1}.txt\".format(model_name, search_type))) as f:\n+            expected_translations = f.readlines()\n+        with open(search_file) as f:\n+            actual_translations = f.readlines()\n+        print \"expected_translations\"\n+        for p in expected_translations:\n+            print p\n+        print \"actual_translations\"\n+        for p in actual_translations:\n+            print p\n+\n+        assert(actual_translations == expected_translations)\n",
      "version_from": "git call",
      "chainer": {
        "version": "1.22.0",
        "cuda": false,
        "cudnn": false,
        "cuda_version": "unavailable",
        "cudnn_version": "unavailable"
      }
    },
    "creation_time": "02:10PM March 23, 2017"
  }
}