{
  "model": {
    "Ei": 5,
    "Eo": 12,
    "Hi": 6,
    "Ho": 15,
    "Ha": 70,
    "Hl": 12,
    "encoder_cell_type": {
      "cell_type": "lstm"
    },
    "decoder_cell_type": {
      "cell_type": "lstm"
    },
    "lexical_probability_dictionary": null,
    "lexicon_prob_epsilon": 0.001,
    "use_deep_attn": false,
    "use_accumulated_attn": false,
    "init_orth": false,
    "use_bn_length": 0,
    "use_goto_attention": false
  },
  "training": {
    "mb_size": 2,
    "nb_batch_to_sort": 20,
    "noise_on_prev_word": false,
    "l2_gradient_clipping": 1,
    "hard_gradient_clipping": null,
    "weight_decay": null,
    "optimizer": "adam",
    "learning_rate": 0.01,
    "momentum": 0.9,
    "randomized_data": false,
    "no_shuffle_of_training_data": false,
    "use_reinf": false,
    "use_previous_prediction": 0,
    "curiculum_training": false,
    "reverse_src": false,
    "reverse_tgt": false,
    "use_soft_prediction_feedback": false,
    "use_gumbel_for_soft_predictions": false,
    "temperature_for_soft_predictions": 1.0
  },
  "training_management": {
    "config": null,
    "data_prefix": "tests/tests_data/models/result_invariability_py3.data",
    "save_prefix": "tests/tests_data/models/result_invariability_py3.train",
    "gpu": null,
    "load_model": null,
    "load_optimizer_state": null,
    "load_trainer_snapshot": null,
    "use_memory_optimization": false,
    "max_nb_iters": 2000,
    "max_nb_epochs": null,
    "max_src_tgt_length": null,
    "report_every": 200,
    "no_resume": false,
    "no_report_or_save": false,
    "sample_every": 200,
    "save_ckpt_every": 4000,
    "save_initial_model_to": null,
    "reshuffle_every_epoch": false,
    "resume": false,
    "timer_hook": false,
    "force_overwrite": true,
    "description": null,
    "set_false_in_config": null,
    "update_old_config_file_with_default_values": false
  },
  "data": {
    "data_fn": "tests/tests_data/models/result_invariability_py3.data.data.json.gz",
    "Vi": 137,
    "Vo": 142,
    "voc": "tests/tests_data/models/result_invariability_py3.data.voc"
  },
  "metadata": {
    "config_version_num": 1,
    "command_line": "bin/make-and-train-result-invariability-model 1234 tests/tests_data/src2.txt tests/tests_data/tgt2.txt tests/tests_data/models/result_invariability_py3 --max_nb_iters 2000 --mb_size 2 --Ei 5 --Eo 12 --Hi 6 --Ha 70 --Ho 15 --Hl 12",
    "knmt_version": {
      "package_version": "0.9.19",
      "git": "c096fd58cc8359c1c54cc2b880df0503b5bd96fa",
      "dirty_status": "dirty",
      "diff": "diff --git a/nmt_chainer/utilities/replace_tgt_unk.py b/nmt_chainer/utilities/replace_tgt_unk.py\nindex add5228..7b3fb37 100644\n--- a/nmt_chainer/utilities/replace_tgt_unk.py\n+++ b/nmt_chainer/utilities/replace_tgt_unk.py\n@@ -7,7 +7,9 @@ __email__ = \"fabien.cromieres@gmail.com\"\n __status__ = \"Development\"\n \n import io \n-import itertools\n+import sys\n+if sys.version_info < (3, 0):\n+    import itertools\n import json\n import unicodedata\n import logging\n@@ -68,7 +70,11 @@ def replace_unk(translations, src_file, dest, dic_fn, remove_unk, normalize_unic\n     if dic_fn is not None:\n         dic = json.load(open(dic_fn))\n \n-    for num_line, (line_t, line_s) in enumerate(itertools.izip(ft, fs)):\n+    if sys.version_info < (3, 0):\n+        iterator = enumerate(itertools.izip(ft, fs))\n+    else:\n+        iterator = enumerate(zip(ft, fs))\n+    for num_line, (line_t, line_s) in iterator:\n         splitted_t = line_t.strip().split(\" \")\n         splitted_s = line_s.strip().split(\" \")\n         new_t = []\n",
      "version_from": "git call",
      "chainer": {
        "version": "1.24.0",
        "cuda": false,
        "cudnn": false,
        "cuda_version": "unavailable",
        "cudnn_version": "unavailable"
      }
    },
    "creation_time": "04:08PM July 11, 2017"
  }
}